{"version":3,"sources":["./src/app/ui-components/screen-display/screen-display.module.ts","./src/app/core/services/core.service.ts","./src/app/config/button-configuration.ts","./src/environments/environment.ts","./src/app/ui-components/header/header.module.ts","./src/app/core/core.component.ts","./src/app/core/core.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/ui-components/button/button.component.ts","./src/app/ui-components/button/button.component.html","./src/app/app.module.ts","./src/app/ui-components/buttons-display/buttons-display.component.html","./src/app/ui-components/buttons-display/buttons-display.component.ts","./src/app/core/utils/operations.utils.ts","./src/app/ui-components/screen-display/screen-display.component.ts","./src/app/ui-components/screen-display/screen-display.component.html","./src/app/ui-components/button/button.module.ts","./src/app/ui-components/buttons-display/buttons-display.module.ts","./src/app/ui-components/header/header.component.ts","./src/app/ui-components/header/header.component.html","./src/app/core/core.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEQ;AAEa;;AAgB7D,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBARrB;YACP,4DAAY;YACZ,oEAAa;SACd;mIAKU,mBAAmB,mBAV5B,gFAAsB,aAGtB,4DAAY;QACZ,oEAAa,aAGb,gFAAsB;;;;;;;;;;;;;ACf1B;AAAA;AAAA;AAAA;AAA+B;;AAKxB,MAAM,WAAW;IAMtB;QAJO,sBAAiB,GAAiC,IAAI,4CAAO,EAAuB,CAAC;QACrF,yBAAoB,GAAiC,IAAI,4CAAO,EAAuB,CAAC;QACxF,uBAAkB,GAAiC,IAAI,4CAAO,EAAuB,CAAC;IAE7E,CAAC;IAEV,uBAAuB,CAAC,MAA2B;QACxD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAEM,0BAA0B,CAAC,MAA2B;QAC3D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAEM,wBAAwB,CAAC,MAA2B;QACzD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;;sEAlBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,yBAAyB,GAA0B;IAC9D;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,EAAE;QACN,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,QAAQ;KACf;CACF,CAAC;AAEK,MAAM,6BAA6B,GAA0B;IAClE;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,KAAK;QACZ,IAAI,EAAE,WAAW;KAClB;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,WAAW;KAClB;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,KAAK;QACZ,IAAI,EAAE,WAAW;KAClB;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,KAAK;QACZ,IAAI,EAAE,WAAW;KAClB;CACF,CAAC;AAEK,MAAM,iCAAiC,GAA0B;IACtE;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,SAAS;KAChB;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,SAAS;KAChB;IACD;QACE,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,SAAS;KAChB;CACF,CAAC;AAEK,MAAM,aAAa,GAAW,CAAC,CAAC;AAEhC,MAAM,iBAAiB,GAAW,CAAC,CAAC;;;;;;;;;;;;;ACnH3C;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEQ;AACM;AAER;;AAe9C,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBATd;YACP,4DAAY;YACZ,oEAAa;YACb,0EAAgB;SACjB;mIAKU,YAAY,mBAXrB,iEAAe,aAGf,4DAAY;QACZ,oEAAa;QACb,0EAAgB,aAGhB,iEAAe;;;;;;;;;;;;;AChBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AAQW;AAGiB;;;;;;AAOpD,MAAM,aAAa;IAYxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAVrC,eAAU,GAAG,IAAI,4CAAO,EAAuB,CAAC;QAChD,gBAAW,GAAW,GAAG,CAAC;QAC1B,gCAA2B,GAAU,EAAE,CAAC;QACxC,+BAA0B,GAAY,EAAE,CAAC;QACzC,kCAA6B,GAAY,EAAE,CAAC;QAE3C,gBAAW,GAAW,CAAC,CAAC;QACxB,cAAS,GAAW,EAAE,CAAC;QACvB,iBAAY,GAAW,CAAC,CAAC;IAEe,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,mBAAmB,CAAC,0EAAa,EAAE,sFAAyB,CAAC,CAAC;QACrG,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,mBAAmB,CAAC,8EAAiB,EAAE,0FAA6B,CAAC,CAAC;QAChH,IAAI,CAAC,2BAA2B,GAAG,8FAAiC,CAAC;IACvE,CAAC;IAEO,SAAS;QACf,OAAO,+EAAe,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9E,CAAC;IAEO,mBAAmB,CAAC,OAAe,EAAE,mBAA0C;QACrF,MAAM,YAAY,GAAY,EAAE,CAAC;QACjC,MAAM,UAAU,GAAG,mBAAmB,CAAC,MAAM,GAAG,OAAO,CAAC;QACxD,IAAI,OAAO,GAAG,CAAC,CAAC;QAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC,CAAC;YAC/E,OAAO,IAAI,OAAO,CAAC;SACpB;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,eAAe,CAAC,OAAe,EAAE,OAAe,EAAE,KAA4B;QACpF,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAEO,uBAAuB,CAAC,MAA2B;QACzD,IAAI,MAAM,CAAC,KAAK,KAAK,GAAG,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;YACnD,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;SACrC;QAED,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;YACzB,8BAA8B;YAC9B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC9B;QAED,IAAI,MAAM,CAAC,KAAK,KAAK,GAAG,EAAE;YACxB,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;SACrC;IACH,CAAC;IAEO,eAAe,CAAC,oBAA2C,EAAE,OAAe,EAAE,OAAe;QACnG,IAAI,SAAS,GAAU,EAAE,CAAC;QAC1B,oBAAoB,CAAC,GAAG,CAAC,GAAG,EAAE;YAC5B,SAAS,GAAG,oBAAoB,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAEO,aAAa;QACnB,OAAO,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC;IACtF,CAAC;IAEO,sBAAsB,CAAC,MAA2B;QACxD,IAAI,IAAI,CAAC,WAAW,KAAK,GAAG,EAAE;YAC5B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAEO,yBAAyB,CAAC,MAA2B;QAC3D,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAe,CAAC;QAExC,8BAA8B;QAC9B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAEO,0BAA0B;QAChC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACpD,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvD,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrD,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,eAAe,CAAC,IAAY;QAClC,8BAA8B;QAC9B,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IACxD,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAEO,qBAAqB,CAAC,MAA2B;QACvD,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAE,8BAA8B;YAC7D,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;SACrC;IACH,CAAC;;0EA1HU,aAAa;6FAAb,aAAa;QCnB1B,0EAA2E;QACzE,8EAA6B;QAC3B,mFAAkB;QAChB,mFAGqB;QACrB,oFAIsB;QACxB,4DAAmB;QACrB,4DAAW;QACb,4DAAO;;QATC,0DAA2B;QAA3B,wFAA2B;QAG3B,0DAAyD;QAAzD,sHAAyD;;;;;;;;;;;;;;;;;;;;;;ACD1D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,oBAAoB,CAAC;KAC9B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QAEzB,sEAAqB;;;;;;;;;;;;;;;;;;;;;;ACOd,MAAM,eAAe;IAW1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QATnC,wBAAmB,GAAwB,EAAyB,CAAC;QACrE,UAAK,GAAW,SAAS,CAAC;QAE5B,sBAAiB,GAAQ;YAC9B,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAChF,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,CAAC,mBAAmB,CAAC;YACtF,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,IAAI,CAAC,mBAAmB,CAAC;SACnF,CAAC;IAE8C,CAAC;IAEjD,QAAQ,KAAW,CAAC;IAEb,gBAAgB;QACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC;IAC1D,CAAC;;8EAjBU,eAAe;+FAAf,eAAe;QCT5B,4EAI+B;QAA7B,uIAAS,sBAAkB,IAAC;QAC1B,uDACJ;QAAA,4DAAS;;QAHP,4EAAe;QAEb,0DACJ;QADI,0GACJ;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACqB;AAEvB;AACT;AACC;AACoB;;AAgB7D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,oEAAgB;YAChB,4FAAuB;YACvB,uEAAa;YACb,4DAAU;YACV,gFAAY;SACb;mIAIU,SAAS,mBAZlB,2DAAY,aAGZ,oEAAgB;QAChB,4FAAuB;QACvB,uEAAa;QACb,4DAAU;QACV,gFAAY;;;;;;;;;;;;;;;;;;;;;;ICfV,yEAAmD;IACjD,4EAAwD;IAC1D,4DAAM;;;IADQ,0DAA8B;IAA9B,0FAA8B;;;IAF9C,yEAA+G;IAC7G,yHAEM;IACR,4DAAM;;;IAHoB,0DAAM;IAAN,2EAAM;;;IAQ9B,0EAA8C;IAC5C,4EAAwD;IAC1D,4DAAM;;;IADQ,0DAA8B;IAA9B,0FAA8B;;;IAF9C,0EAA+G;IAC7G,0HAEM;IACR,4DAAM;;;IAHoB,0DAAM;IAAN,2EAAM;;;IAQlC,0EAAoG;IAClG,4EAAwD;IAC1D,4DAAM;;;;IAFyD,uGAAoC;IACrF,0DAA8B;IAA9B,0FAA8B;;ACZvC,MAAM,uBAAuB;IAMlC;QAJS,+BAA0B,GAAc,EAAE,CAAC;QAC3C,kCAA6B,GAAc,EAAE,CAAC;QAC9C,uCAAkC,GAAW,EAAE,CAAC;IAEzC,CAAC;IAEjB,QAAQ,KAAW,CAAC;IAEb,gBAAgB,CAAC,MAA2B;QACjD,OAAO,MAAM,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC;IAC1D,CAAC;;8FAZU,uBAAuB;uGAAvB,uBAAuB;QDRpC,6EAA2C;QACzC,yEAAqC;QACnC,mHAIM;QACR,4DAAM;QAEN,yEAA4D;QAC1D,mHAIM;QACR,4DAAM;QACR,4DAAU;QAEV,6EAAuC;QACrC,mHAEM;QACR,4DAAU;;QApBe,0DAA6B;QAA7B,mGAA6B;QAQ7B,0DAAgC;QAAhC,sGAAgC;QAS/B,0DAAqC;QAArC,2GAAqC;;;;;;;;;;;;;;AEnB/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,eAAe,GAAG,CAAC,IAAY,EAAE,WAAmB,EAAE,YAAoB,EAAE,EAAE;IACzF,IAAI,UAAU,GAAQ;QACpB,GAAG,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,YAAY,CAAC;QAClD,KAAK,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,WAAW,EAAE,YAAY,CAAC;QACtD,GAAG,EAAE,GAAG,EAAE,CAAC,uBAAuB,CAAC,WAAW,EAAE,YAAY,CAAC;QAC7D,GAAG,EAAE,GAAG,EAAE,CAAC,iBAAiB,CAAC,WAAW,EAAE,YAAY,CAAC;KACxD,CAAC;IAEF,OAAO,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;AAC5B,CAAC,CAAC;AAEK,MAAM,YAAY,GAAG,CAAC,WAAmB,EAAE,YAAoB,EAAE,EAAE;IACxE,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjD,CAAC,CAAC;AAEK,MAAM,cAAc,GAAG,CAAC,WAAmB,EAAE,YAAoB,EAAE,EAAE;IAC1E,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjD,CAAC,CAAC;AAEK,MAAM,uBAAuB,GAAG,CAAC,WAAmB,EAAE,YAAoB,EAAE,EAAE;IACnF,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjD,CAAC,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAAC,WAAmB,EAAE,YAAoB,EAAE,EAAE;IAC7E,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjD,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AClBK,MAAM,sBAAsB;IAIjC;QAFS,gBAAW,GAAoB,CAAC,CAAC;IAE1B,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FAPU,sBAAsB;sGAAtB,sBAAsB;QCPnC,2EAAU;QACR,sFAAyE;QACvE,uDACF;QAAA,4DAAmB;QACrB,4DAAW;;QAFP,0DACF;QADE,2FACF;;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEY;AAEM;AACZ;;AAiB9C,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,mBAPZ;QACT,uEAAW;KACZ,YANQ;YACP,4DAAY;YACZ,wEAAe;SAChB;mIAQU,YAAY,mBAbrB,iEAAe,aAGf,4DAAY;QACZ,wEAAe,aAMf,iEAAe;;;;;;;;;;;;;ACnBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAGU;AACa;;AAc/D,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBARtB;YACP,4DAAY;YACZ,kEAAY;SACb;mIAKU,oBAAoB,mBAV7B,kFAAuB,aAGvB,4DAAY;QACZ,kEAAY,aAGZ,kFAAuB;;;;;;;;;;;;;;;;;;;;;ACRpB,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEAAQ;QACN,iFAA6B;QAC3B,2EAAU;QAAA,oEAAS;QAAA,4DAAW;QAC9B,0EAAmB;QAAA,6EAAkB;QAAA,4DAAO;QAC9C,4DAAc;QAChB,4DAAS;;;;;;;;;;;;;;ACLT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEQ;AAEqC;AACrB;AAC0B;AAChD;AACK;;AAoB/C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBAPV;QACT,kEAAW;KACZ,YATQ;YACP,gFAAY;YACZ,0GAAoB;YACpB,4DAAY;YACZ,uGAAmB;YACnB,oEAAa;SACd;mIAQU,UAAU,mBAhBnB,6DAAa,aAGb,gFAAY;QACZ,0GAAoB;QACpB,4DAAY;QACZ,uGAAmB;QACnB,oEAAa,aAMb,6DAAa;;;;;;;;;;;;;ACxBjB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ScreenDisplayComponent } from './screen-display.component';\n\n\n\n@NgModule({\n  declarations: [\n    ScreenDisplayComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule\n  ],\n  exports: [\n    ScreenDisplayComponent\n  ]\n})\nexport class ScreenDisplayModule { }\n","import { ButtonConfiguration } from './../model/button-configuration.model';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n\n  public numberClickEvent$: Subject<ButtonConfiguration> = new Subject<ButtonConfiguration>();\n  public operationClickEvent$: Subject<ButtonConfiguration> = new Subject<ButtonConfiguration>();\n  public generalClickEvent$: Subject<ButtonConfiguration> = new Subject<ButtonConfiguration>();\n\n  constructor() { }\n\n  public callNextOnNumberSubject(button: ButtonConfiguration): void {\n    this.numberClickEvent$.next(button);\n  }\n\n  public callNextOnOperationSubject(button: ButtonConfiguration): void {\n    this.operationClickEvent$.next(button);\n  }\n\n  public callNextOnGeneralSubject(button: ButtonConfiguration): void {\n    this.generalClickEvent$.next(button);\n  }\n\n}\n","import { ButtonConfiguration } from './../core/model/button-configuration.model';\n\nexport const numberButtonConfiguration: ButtonConfiguration[] = [\n  {\n    id: 1,\n    label: '1',\n    value: 1,\n    type: 'number'\n  },\n  {\n    id: 2,\n    label: '2',\n    value: 2,\n    type: 'number'\n  },\n  {\n    id: 3,\n    label: '3',\n    value: 3,\n    type: 'number'\n  },\n  {\n    id: 4,\n    label: '4',\n    value: 4,\n    type: 'number'\n  },\n  {\n    id: 5,\n    label: '5',\n    value: 5,\n    type: 'number'\n  },\n  {\n    id: 6,\n    label: '6',\n    value: 6,\n    type: 'number'\n  },\n  {\n    id: 7,\n    label: '7',\n    value: 7,\n    type: 'number'\n  },\n  {\n    id: 8,\n    label: '8',\n    value: 8,\n    type: 'number'\n  },\n  {\n    id: 9,\n    label: '9',\n    value: 9,\n    type: 'number'\n  },\n  {\n    id: 10,\n    label: '0',\n    value: 0,\n    type: 'number'\n  }\n];\n\nexport const operationsButtonConfiguration: ButtonConfiguration[] = [\n  {\n    id: 1,\n    label: '+',\n    value: 'add',\n    type: 'operation'\n  },\n  {\n    id: 2,\n    label: '-',\n    value: 'minus',\n    type: 'operation'\n  },\n  {\n    id: 3,\n    label: 'x',\n    value: 'mul',\n    type: 'operation'\n  },\n  {\n    id: 4,\n    label: '/',\n    value: 'div',\n    type: 'operation'\n  }\n];\n\nexport const generalPurposeButtonConfiguration: ButtonConfiguration[] = [\n  {\n    id: 1,\n    label: 'AC',\n    value: 'AC',\n    type: 'general'\n  },\n  {\n    id: 2,\n    label: '.',\n    value: '.',\n    type: 'general'\n  },\n  {\n    id: 3,\n    label: '=',\n    value: '=',\n    type: 'general'\n  }\n];\n\nexport const numberRowSize: number = 3;\n\nexport const operationsRowSize: number = 1;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatToolbarModule\n  ],\n  exports: [\n    HeaderComponent\n  ]\n})\nexport class HeaderModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  generalPurposeButtonConfiguration,\n  numberButtonConfiguration,\n  numberRowSize,\n  operationsButtonConfiguration,\n  operationsRowSize,\n} from './../config/button-configuration';\nimport { CoreService } from './services/core.service';\nimport { ButtonConfiguration } from './model/button-configuration.model';\nimport { operationsUtils } from './utils/operations.utils';\n\n@Component({\n  selector: 'app-core',\n  templateUrl: './core.component.html',\n  styleUrls: ['./core.component.scss'],\n})\nexport class CoreComponent implements OnInit {\n\n  public clickEvent = new Subject<ButtonConfiguration>();\n  public displayData: string = '0';\n  public generalPurposeMatrixDisplay: any[] = [];\n  public numberButtonsMatrixDisplay: any[][] = [];\n  public operationButtonsMatrixDisplay: any[][] = [];\n\n  private firstNumber: number = 0;\n  private operation: string = '';\n  private secondNumber: number = 0;\n\n  constructor(private coreService: CoreService) { }\n\n  ngOnInit(): void {\n    this.registerClickSubscriptions();\n    this.numberButtonsMatrixDisplay = this.createButtonsMatrix(numberRowSize, numberButtonConfiguration);\n    this.operationButtonsMatrixDisplay = this.createButtonsMatrix(operationsRowSize, operationsButtonConfiguration);\n    this.generalPurposeMatrixDisplay = generalPurposeButtonConfiguration;\n  }\n\n  private calculate(): string {\n    return operationsUtils(this.operation, this.firstNumber, this.secondNumber);\n  }\n\n  private createButtonsMatrix(rowSize: number, buttonConfiguration: ButtonConfiguration[]): any[][] {\n    const buttonMatrix: any[][] = [];\n    const numberRows = buttonConfiguration.length / rowSize;\n    let initial = 0;\n\n    for (let i = 0; i < numberRows; i++) {\n      buttonMatrix.push(this.createMatrixRow(initial, rowSize, buttonConfiguration));\n      initial += rowSize;\n    }\n    return buttonMatrix;\n  }\n\n  private createMatrixRow(initial: number, rowSize: number, array: ButtonConfiguration[]): any[] {\n    return this.getRowFromArray(array, initial, rowSize);\n  }\n\n  private generalButtonClickEvent(button: ButtonConfiguration): void {\n    if (button.value === '=' && this.secondNumber === 0) {\n      this.secondNumber = +this.displayData;\n      this.displayData = this.calculate();\n    }\n\n    if (button.value === 'AC') {\n      // TODO: CHANGE STRING TO ENUM\n      this.resetCalculator('hard');\n    }\n\n    if (button.value === '.') {\n      this.numberButtonClickEvent(button);\n    }\n  }\n\n  private getRowFromArray(buttonConfigurations: ButtonConfiguration[], initial: number, rowSize: number): ButtonConfiguration[] {\n    let buttonRow: any[] = [];\n    buttonConfigurations.map(() => {\n      buttonRow = buttonConfigurations.slice(initial, initial + rowSize);\n    });\n    return buttonRow;\n  }\n\n  private hardReset(): void {\n    this.displayData = '0';\n    this.firstNumber = 0;\n    this.secondNumber = 0;\n    this.operation = '';\n  }\n\n  private isNewCalculus(): boolean {\n    return this.firstNumber !== 0 && this.secondNumber !== 0 && +this.displayData !== 0;\n  }\n\n  private numberButtonClickEvent(button: ButtonConfiguration): void {\n    if (this.displayData === '0') {\n      this.displayData = button.label;\n    } else {\n      this.displayData = this.displayData.concat(button.label);\n    }\n\n    this.verifyNewCalculusFlow(button);\n  }\n\n  private operationButtonClickEvent(button: ButtonConfiguration): void {\n    this.firstNumber = +this.displayData;\n    this.operation = button.value as string;\n\n    // TODO: CHANGE STRING TO ENUM\n    this.resetCalculator('soft');\n  }\n\n  private registerClickSubscriptions(): void {\n    this.coreService.numberClickEvent$.subscribe(button => {\n      this.numberButtonClickEvent(button);\n    });\n\n    this.coreService.operationClickEvent$.subscribe(button => {\n      this.operationButtonClickEvent(button);\n    });\n\n    this.coreService.generalClickEvent$.subscribe(button => {\n      this.generalButtonClickEvent(button);\n    });\n  }\n\n  private resetCalculator(mode: string): void {\n    // TODO: CHANGE STRING TO ENUM\n    mode === 'soft' ? this.softReset() : this.hardReset();\n  }\n\n  private softReset(): void {\n    this.displayData = '0';\n  }\n\n  private verifyNewCalculusFlow(button: ButtonConfiguration): void {\n    if (this.isNewCalculus()) {\n      this.resetCalculator('hard');  // TODO: CHANGE STRING TO ENUM\n      this.numberButtonClickEvent(button);\n    }\n  }\n}\n\n","<main class=\"d-flex flex-column justify-content-center align-items-center\">\n  <mat-card class=\"calculator\">\n    <mat-card-content>\n      <app-screen-display\n        class=\"w-100\"\n        [displayData]=\"displayData\">\n      </app-screen-display>\n      <app-buttons-display\n        [numberButtonsMatrixDisplay]=\"numberButtonsMatrixDisplay\"\n        [operationButtonsMatrixDisplay]=\"operationButtonsMatrixDisplay\"\n        [generalPurposeButtonsMatrixDisplay]=\"generalPurposeMatrixDisplay\">\n      </app-buttons-display>\n    </mat-card-content>\n  </mat-card>\n</main>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-calculator';\n}\n","<app-header></app-header>\n\n<app-core></app-core>\n","import { CoreService } from './../../core/services/core.service';\nimport { ButtonConfiguration } from './../../core/model/button-configuration.model';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input() buttonConfiguration: ButtonConfiguration = {} as ButtonConfiguration;\n  @Input() color: string = 'primary';\n\n  public clickEventHandler: any = {\n    number: () => this.coreService.callNextOnNumberSubject(this.buttonConfiguration),\n    operation: () => this.coreService.callNextOnOperationSubject(this.buttonConfiguration),\n    general: () => this.coreService.callNextOnGeneralSubject(this.buttonConfiguration)\n  };\n\n  constructor(private coreService: CoreService) { }\n\n  ngOnInit(): void { }\n\n  public buttonClickEvent(): void {\n    this.clickEventHandler[this.buttonConfiguration.type]();\n  }\n}\n","<button\n  mat-raised-button\n  class=\"w-100\"\n  [color]=\"color\"\n  (click)=\"buttonClickEvent()\">\n    {{ buttonConfiguration.label }}\n</button>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HeaderModule } from './ui-components/header/header.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    HeaderModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<section class=\"d-flex flex-row mt-2 mb-1\">\n  <div class=\"d-flex flex-column w-75\">\n    <div *ngFor=\"let row of numberButtonsMatrixDisplay\" class=\"d-flex flex-row justify-content-between my-1 w-100\">\n      <div *ngFor=\"let button of row\" class=\"mx-1 w-100\">\n        <app-button [buttonConfiguration]=\"button\"></app-button>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"operation-buttons\" class=\"d-flex flex-column w-25\">\n    <div *ngFor=\"let row of operationButtonsMatrixDisplay\" class=\"d-flex flex-column justify-content-between my-1\">\n      <div *ngFor=\"let button of row\" class=\"w-100\">\n        <app-button [buttonConfiguration]=\"button\"></app-button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section class=\"d-flex flex-row w-100\">\n  <div *ngFor=\"let button of generalPurposeButtonsMatrixDisplay\" [ngClass]=\"defineButtonSize(button)\">\n    <app-button [buttonConfiguration]=\"button\"></app-button>\n  </div>\n</section>\n","import { ButtonConfiguration } from './../../core/model/button-configuration.model';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-buttons-display',\n  templateUrl: './buttons-display.component.html',\n  styleUrls: ['./buttons-display.component.scss']\n})\nexport class ButtonsDisplayComponent implements OnInit {\n\n  @Input() numberButtonsMatrixDisplay: any [] [] = [];\n  @Input() operationButtonsMatrixDisplay: any [] [] = [];\n  @Input() generalPurposeButtonsMatrixDisplay: any [] = [];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  public defineButtonSize(button: ButtonConfiguration): string {\n    return button.value !== '=' ? 'mx-1 w-33' : 'ms-1 w-66';\n  }\n}\n","export const operationsUtils = (type: string, firstNumber: number, secondNumber: number) => {\n  var operations: any = {\n    add: () => addOperation(firstNumber, secondNumber),\n    minus: () => minusOperation(firstNumber, secondNumber),\n    mul: () => multiplicationOperation(firstNumber, secondNumber),\n    div: () => divisionOperation(firstNumber, secondNumber)\n  };\n\n  return operations[type]();\n};\n\nexport const addOperation = (firstNumber: number, secondNumber: number) => {\n  return (firstNumber + secondNumber).toString();\n};\n\nexport const minusOperation = (firstNumber: number, secondNumber: number) => {\n  return (firstNumber - secondNumber).toString();\n};\n\nexport const multiplicationOperation = (firstNumber: number, secondNumber: number) => {\n  return (firstNumber * secondNumber).toString();\n};\n\nexport const divisionOperation = (firstNumber: number, secondNumber: number) => {\n  return (firstNumber / secondNumber).toString();\n};\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-screen-display',\n  templateUrl: './screen-display.component.html',\n  styleUrls: ['./screen-display.component.scss']\n})\nexport class ScreenDisplayComponent implements OnInit {\n\n  @Input() displayData: string | number = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-content class=\"d-flex flex-row justify-content-end display-4 \">\n    {{ displayData }}\n  </mat-card-content>\n</mat-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { CoreService } from './../../core/services/core.service';\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n  declarations: [\n    ButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  providers: [\n    CoreService\n  ],\n  exports: [\n    ButtonComponent\n  ]\n})\nexport class ButtonModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ButtonModule } from './../button/button.module';\nimport { ButtonsDisplayComponent } from './buttons-display.component';\n\n@NgModule({\n  declarations: [\n    ButtonsDisplayComponent\n  ],\n  imports: [\n    CommonModule,\n    ButtonModule\n  ],\n  exports: [\n    ButtonsDisplayComponent\n  ]\n})\nexport class ButtonsDisplayModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <mat-toolbar color=\"primary\">\n    <mat-icon>calculate</mat-icon>\n    <span class=\"mx-3\">Angular Calculator</span>\n  </mat-toolbar>\n</header>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ScreenDisplayModule } from '../ui-components/screen-display/screen-display.module';\nimport { ButtonModule } from './../ui-components/button/button.module';\nimport { ButtonsDisplayModule } from './../ui-components/buttons-display/buttons-display.module';\nimport { CoreComponent } from './core.component';\nimport { CoreService } from './services/core.service';\n\n@NgModule({\n  declarations: [\n    CoreComponent\n  ],\n  imports: [\n    ButtonModule,\n    ButtonsDisplayModule,\n    CommonModule,\n    ScreenDisplayModule,\n    MatCardModule\n  ],\n  providers: [\n    CoreService\n  ],\n  exports: [\n    CoreComponent\n  ]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}